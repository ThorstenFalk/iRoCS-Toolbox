namespace iRoCS
{

  template<typename DataT>
  void Marker::_loadFixedSize(
      blitz::Array<DataT,1> &buf, BlitzH5File const &inFile,
      std::string const &dsName, bool showWarnings)
  {
    BlitzIndexT targetSize = buf.size();
    try
    {
      inFile.readDataset(buf, dsName);
    }
    catch (BlitzH5Error &)
    {
      buf.resize(0);
      if (showWarnings)
          std::cerr << "'" << dsName << "' not found. Setting it to -1"
                    << std::endl;
    }
    BlitzIndexT readSize = buf.size();
    buf.resizeAndPreserve(targetSize);
    if (readSize < targetSize)
        buf(blitz::Range(readSize, targetSize - 1)) = DataT(-1);
  }

}

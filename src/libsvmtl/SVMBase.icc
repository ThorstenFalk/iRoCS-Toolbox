/**************************************************************************
 *
 * Copyright (C) 2004-2015 Olaf Ronneberger, Florian Pigorsch, JÃ¶rg Mechnich,
 *                         Thorsten Falk
 *
 *        Image Analysis Lab, University of Freiburg, Germany
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
 *
 **************************************************************************/

/**************************************************************************
**       Title: 
**    $RCSfile$
**   $Revision: 536 $$Name$
**       $Date: 2004-09-10 13:51:50 +0200 (Fri, 10 Sep 2004) $
**   Copyright: GPL $Author: ronneber $
** Description:
**
**    
**
**-------------------------------------------------------------------------
**
**  $Log$
**  Revision 1.1  2004/09/10 11:51:50  ronneber
**  renamed class SVM to SVMBase to avoid confusion with SVM template parameters
**
**  Revision 1.1  2004/08/26 08:36:59  ronneber
**  initital import
**
**
**
**************************************************************************/



template< typename KF> 
template<typename FV>
double svt::SVMBase<KF>::classify( const FV& testObject, 
                               const Model<FV>& model) const
{
  CHECK_MEMBER_TEMPLATE_2PARAM( svt_check::RequireKernel_k_function<KF,FV>);

  double sum = 0;
  for( unsigned int i = 0; i < model.size(); ++i)
  {
    sum += model.alpha(i) *  p_kernel.k_function( testObject, 
                                                  *(model.supportVector(i)));
  }
  sum -= model.rho();
  return sum;
}
